local druid = require("druid.druid")
local monarch = require("monarch.monarch")
require("modules.hashes")

-- All component callbacks pass "self" as first argument
-- This "self" is a context data passed in `druid.new(context)`
local function on_box_callback(self)
    print("The button clicked!")
    monarch.show(SCENES.GAME, { pop = 1 })
end

function init(self)
    self.druid = druid.new(self)
    self.button = self.druid:new_button("box", on_box_callback)
end

-- "final" is a required function for the correct Druid workflow
function final(self)
    self.druid:final()
end

-- "update" is used in progress bar, scroll, and timer basic components
function update(self, dt)
    self.druid:update(dt)
end

-- "on_message" is used for specific Druid events, like language change or layout change
function on_message(self, message_id, message, sender)
    self.druid:on_message(message_id, message, sender)
end

-- "on_input" is used in almost all Druid components
-- The return value from `druid:on_input` is required!
function on_input(self, action_id, action)
    return self.druid:on_input(action_id, action)
end